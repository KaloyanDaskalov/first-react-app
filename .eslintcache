[{"C:\\Users\\KALA\\Desktop\\react-to-firebase\\src\\index.js":"1","C:\\Users\\KALA\\Desktop\\react-to-firebase\\src\\components\\App.js":"2","C:\\Users\\KALA\\Desktop\\react-to-firebase\\src\\components\\UI\\Button\\Button.js":"3","C:\\Users\\KALA\\Desktop\\react-to-firebase\\src\\components\\UI\\Input\\Input.js":"4","C:\\Users\\KALA\\Desktop\\react-to-firebase\\src\\components\\Forms\\Signup.js":"5","C:\\Users\\KALA\\Desktop\\react-to-firebase\\src\\components\\Forms\\SignIn.js":"6"},{"size":230,"mtime":1607979201598,"results":"7","hashOfConfig":"8"},{"size":741,"mtime":1608586816914,"results":"9","hashOfConfig":"8"},{"size":225,"mtime":1608584156090,"results":"10","hashOfConfig":"8"},{"size":368,"mtime":1608584975764,"results":"11","hashOfConfig":"8"},{"size":1538,"mtime":1610198867587,"results":"12","hashOfConfig":"8"},{"size":2371,"mtime":1608586764463,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"giehuh",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"C:\\Users\\KALA\\Desktop\\react-to-firebase\\src\\index.js",[],["29","30"],"C:\\Users\\KALA\\Desktop\\react-to-firebase\\src\\components\\App.js",["31"],"import React from \"react\";\nimport Signup from \"./Forms/Signup\";\nimport SignIn from \"./Forms/SignIn\";\nimport classes from './App.module.css';\n\nconst app = () => (<div className={classes.Background}><Signup /></div>);\n\nexport default app;\n// class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       speed: 0\n//     }\n//   }\n\n//   componentDidMount() {\n//     const rootRef = firebase.database().ref();\n//     const speedRef = rootRef.child('speed');\n//     speedRef.on('value', snap => {\n//       this.setState({ speed: snap.val() });\n//     });\n//   }\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <h1>{this.state.speed}</h1>\n//       </div>\n//     );\n//   }\n// }","C:\\Users\\KALA\\Desktop\\react-to-firebase\\src\\components\\UI\\Button\\Button.js",[],"C:\\Users\\KALA\\Desktop\\react-to-firebase\\src\\components\\UI\\Input\\Input.js",[],"C:\\Users\\KALA\\Desktop\\react-to-firebase\\src\\components\\Forms\\Signup.js",["32"],"C:\\Users\\KALA\\Desktop\\react-to-firebase\\src\\components\\Forms\\SignIn.js",["33"],"import React, { Component } from 'react';\r\nimport classes from './Forms.module.css';\r\nimport Button from '../UI/Button/Button';\r\nimport Input from '../UI/Input/Input';\r\n\r\nclass SignIn extends Component {\r\n\r\n    state = {\r\n        emailValue: '',\r\n        passValue: '',\r\n        emailError: false,\r\n        passError: false,\r\n        errorMessage: 'Password must be 4 to 10 characters'\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        if (this.state.emailValue < 1) {\r\n            this.setState({ emailError: true, errorMessage: 'Invalid Email' });\r\n        } else {\r\n            this.setState({ emailError: false, errorMessage: 'Password must be 4 to 10 characters' });\r\n        }\r\n    }\r\n\r\n    emailHandler = (event) => {\r\n        this.setState({ emailValue: event.target.value });\r\n    }\r\n\r\n    passwordHandler = (event) => {\r\n        this.setState({ passValue: event.target.value });\r\n    }\r\n\r\n    render() {\r\n\r\n        const classEmail = [classes.Input];\r\n        const classPassword = [classes.Input];\r\n        const classMessage = [classes.Message]\r\n\r\n        if (this.state.emailError) classEmail.push(classes.Error);\r\n        if (this.state.passError) classPassword.push(classes.Error);\r\n        if (this.state.errorMessage !== 'Password must be 4 to 10 characters') classMessage.push(classes.Show);\r\n\r\n        return (\r\n            <div className={classes.Container} >\r\n                <header className={classes.Header}>\r\n                    <h2 className={classes.Heading}>Sign In</h2>\r\n                    <p className={classes.HeaderMessage}>\r\n                        Not a member? <a href=\"#\" className={classes.HeaderLink}>Sign Up Now</a>\r\n                    </p>\r\n                    <p className={classMessage.join(' ')}>{this.state.errorMessage}</p>\r\n                </header>\r\n                <form className={classes.Form} onSubmit={this.submitHandler}>\r\n                    <Input getValue={(e) => this.emailHandler(e)} showError={this.state.emailError} attributes={{ type: 'text', placeholder: 'Email' }} />\r\n                    <Input getValue={(e) => this.passwordHandler(e)} showError={this.state.passError} attributes={{ type: 'password', placeholder: 'Password' }} />\r\n                    <Button>Sign In</Button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn;",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":3,"column":8,"nodeType":"40","messageId":"41","endLine":3,"endColumn":14},{"ruleId":"42","severity":1,"message":"43","line":20,"column":35,"nodeType":"44","endLine":20,"endColumn":78},{"ruleId":"42","severity":1,"message":"43","line":48,"column":39,"nodeType":"44","endLine":48,"endColumn":82},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'SignIn' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]